library(tidyverse)
library(tsne)
library(ggrepel)

max_level <- read_csv("data/Prostate/Topic_Model/max_level.csv")

# Remove columns for cleaner data
tta_small <- tidy_topics_all %>% 
	unnest(posts) %>% 
	select(word, topic, level) %>% 
	group_by(level) %>% 
	nest(.key = "posts") %>% 
	mutate(level = level %>% as.numeric()) %>% 
	ungroup()

# This gives the hierarchical structure
for(my_level in tta_small$level){
	if(my_level == 0){
		df <- tta_small %>% 
			filter(level == 0) %>% 
			select(-level) %>% 
			unnest(posts)
	}else{
		df <- df %>% 
			left_join(
				tta_small %>% 
					filter(level == my_level) %>% 
					select(-level) %>% 
					unnest(posts), 
				by = "word",
				suffix = c(my_level-1, my_level) %>% as.character
			)
	}
}

# Group-to-group interaction rates between topics
tidy_topic_interactions <- list.files(path = "data/Prostate/Topic_Model", pattern = "prostate_p_td_tw_level_",
																			full.names = T, include.dirs=T, all.files =T) %>% 
	as_tibble() %>%
	select(path = value) %>% 
	mutate(
		mat = map(path, 
							function(path){
								read_csv(path) %>% 
									select(td = X1, everything()) %>% 
									mutate(td = td + 1) %>% 
									gather("tw", "p", -td) %>% 
									mutate(tw = as.numeric(tw) + 1)
							}
		)
	) %>% 
	mutate(level = str_extract(path, "\\d")) %>% 
	filter(level <= max_level$level) %>%
	select(level, mat)

t <- tidy_topic_interactions %>% 
	inner_join(tidy_topic_interactions, by = "level") %>% 
	unnest(mat.x) %>%
	unnest(mat.y, key = "1") %>% 
	filter(td == td1) %>% 
	group_by(level, tw, tw1) %>% 
	summarise(p = -sum(p*p1)) %>% 
	arrange(level, tw, tw1) %>% 
	group_by(level) %>% 
	nest() %>% 
	ungroup() %>% 
	mutate(level = as.numeric(level)) %>% 
	filter(level != max(level)) %>% 
	mutate(mat = 
				 	map(data, function(data = .x){
				 		data %>% 
				 			pivot_wider(names_from = tw1, values_from = p) %>% 
				 			select(-tw) %>% 
				 			as.matrix() %>% 
				 			tsne(k = 2) %>% 
				 			as_tibble()
				 	}
				 	)
	)

# for(my_level in t$level){
# 	if(my_level < max(t$level)){
# 		
# 	df[,c(1,(my_level+2):(my_level+3))] %>% 
# 			group_by_at(3) %>% 
# 			nest()
# 		
# 	}
# 
# 	
# }

t2 <- t %>% 
	inner_join(topic_tops %>% group_by(level) %>% nest() %>% ungroup() %>%  transmute(level, top = data) %>%  mutate(level = as.numeric(level)) %>% filter(level != max(level)), by = "level") %>% 
	mutate(
		mat = map2(mat, top,
							 function(mat = .x, top = .y){
							 	mat %>% mutate(topic = 1:n()) %>% 
							 		inner_join(top, by = "topic")
							 })
	)

p <- t2 %>% 
	filter(level == 0) %>% 
	ungroup() %>% 
	unnest(mat) %>% 
	ggplot(aes(V1, V2, label = word, size = 10*p^(1/0.7))) + 
	geom_text_repel(show.legend = F) + 
	theme_void()

ggsave(p, filename = "Figures/Plots/Prostate/mds_part.pdf", device = "pdf",
			 width = 10, height = 8)

p <- t2 %>% 
	filter(level == 0) %>% 
	ungroup() %>% 
	unnest(mat) %>% 
	select(level, V1, V2, topic, word, p) %>% 
	left_join(tidy_topics_all %>% 
							filter(level == 0) %>% 
							unnest(posts),
						by = "topic"
	) %>% 
	mutate(p = p.x*p.y) %>% 
	top_n(500,p) %>% 
	ggplot(aes(V1, V2, label = word.y, size = p^(1/0.7), color = topic %>% as.factor)) + 
	geom_text_repel(show.legend = F, max.overlaps = 300,segment.alpha = 0.2) + 
	theme_void()

ggsave(p, filename = "Figures/Plots/Prostate/mds_full.pdf", device = "pdf",
			 width = 10, height = 8)

